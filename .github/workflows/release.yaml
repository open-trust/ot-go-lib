name: otgo release
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Release
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go
      uses: actions/setup-go@v1
      with:
        go-version: 1.15.2
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go version
        go get -v -d ./...

    - name: Build project # This would actually build your project, using zip for an example artifact
      run: |
        make build-darwin
        zip -j otgo-darwin ./dist/darwin/otgo
        make build-linux
        zip -j otgo-linux ./dist/linux/otgo

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset For Darwin
      id: upload-release-asset-darwin
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./otgo-darwin.zip
        asset_name: otgo-darwin.zip
        asset_content_type: application/zip

    - name: Upload Release Asset For Linux
      id: upload-release-asset-linux
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./otgo-linux.zip
        asset_name: otgo-linux.zip
        asset_content_type: application/zip
